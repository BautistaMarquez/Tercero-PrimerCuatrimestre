@startuml Ejercicio6

Usuario <- Excursion : UsuariosInscriptos 
Usuario <- Excursion : ListaDeEspera
Excursion -> Estado : estado
Estado <.. Provisoria
Estado <.. Definitiva
Estado <.. Maxima

class Excursion <<Context>> {
    -nombre : String
    -fechaInicio : Date 
    -fechaFin : Date 
    -puntoEncuentro : String 
    -costo : Double 
    -cupoMin : Int 
    -cupoMax : Int 
    +inscribir(Usuario unUsuario)
    +retornarCupoActual() : Int
    +obtenerInformacion() : String
    +setEstado(Estado e)
}

class Usuario {
    -nombre : String 
    -apellido : String 
    -mail : String 

}

interface Estado <<State>> {
    +obtenerInformacion(Excursion exc) : String
    +realizarString(Excursion exc) : String
}

class Provisoria <<ConcreteStateA>> {
    +obtenerInformacion(Excursion exc) : String
    +realizarString(Excursion exc) : String
}

class Definitiva <<ConcreteStateB>> {
    +obtenerInformacion(Excursion exc) : String
    +realizarString(Excursion exc) : String
}

class Maxima <<ConcreteStateC>> {
    +obtenerInformacion(Excursion exc) : String
    +realizarString(Excursion exc) : String
}

@enduml