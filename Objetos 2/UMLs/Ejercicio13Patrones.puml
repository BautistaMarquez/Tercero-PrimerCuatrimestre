@startuml Ejercicio13

Cajero *-- Linea : fabricador 
Linea <|-- LineaDeSandwichClasico
Linea <|-- LineaDeSandwichSinTACC
Linea <|-- LineaDeSandwichVegano
Linea <|-- LineaDeSandwichVegetariano
Ingrediente <- Sandwich : ingredientes
Sandwich <- Linea : sandwich

'Consultar tema Builder en general, los UMLs de ejemplo que hay no me aclaran mucho'

'En este caso el tema del orden no importaria mucho porque ni siquiera piden que imprimamos un String, por eso me resulta medio engorroso'
'En este caso no imporataria pero se supone que el cliente le indicaria al director por medio de un mensaje o x que fabricador tiene que setear se supone?'
'Director setea el orden en Construir'
class Cajero <<Director>>{  
    +construir(Linea fabricador) : Sandwich
}

'Builder sabe consturir pero no sabe el orden'
abstract class Linea <<Builder>>{
    +crearSandwich() 
    +agregarPan(Sandwich s)
    +agregarAderezo(Sandwich s)
    +agregarPrincipal(Sandwich s)
    +agregarAdicional(Sandwich s)
    +finalizarSandwich() : Sandwich
} 

class LineaDeSandwichClasico <<ConcreteBuilder>>{
    +agregarPan(Sandwich s)
    +agregarAderezo(Sandwich s)
    +agregarPrincipal(Sandwich s)
    +agregarAdicional(Sandwich s)
}

class LineaDeSandwichVegetariano <<ConcreteBuilder>>{
    +agregarPan(Sandwich s)
    +agregarAderezo(Sandwich s)
    +agregarPrincipal(Sandwich s)
    +agregarAdicional(Sandwich s)
}

class LineaDeSandwichVegano <<ConcreteBuilder>>{
    +agregarPan(Sandwich s)
    +agregarAderezo(Sandwich s)
    +agregarPrincipal(Sandwich s)
    +agregarAdicional(Sandwich s)
}

class LineaDeSandwichSinTACC <<ConcreteBuilder>>{
    +agregarPan(Sandwich s)
    +agregarAderezo(Sandwich s)
    +agregarPrincipal(Sandwich s)
    +agregarAdicional(Sandwich s)
}

class Sandwich{
    +getPrecio() : Real
    +setIngrediente(Ingrediente i)
}

class Ingrediente{
    +nombre : String 
    +precio : Real
    +getPrecio() : Real
}


@enduml 